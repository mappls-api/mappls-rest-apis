openapi: 3.0.3
info:
  title: Geolocation API
  description: >-
    Before using the API in the your solution, please ensure that the related access is enabled in the [Mappls Console](https://auth.mappls.com/console/), within your app - be it for Mobile OR Web or Cloud integration.<br><ol><li>Copy and paste the key from your `credentials` section from your API [keys](https://auth.mappls.com/console/) into the `access_token` query parameter.</li><br><ul><li>Your static key can be secured by whitelisting its usage for particular IPs (in case of cloud app usage) OR a set of domains (in case of a web app).</li><br><li>Your static key obtained from your Console is to be passed as a query parameter: `access_token`.</li></ul></ol><br>**Note**: <ol> <li> The response listed in the below documentation is ONLY indicative of the overall capabilities of Mappls's Search APIs. </li><li> Not all response parameters mentioned in the below documentation is assured to be present in all the use-cases. The response of any of the below search API is thus, dependent on the use-case agreed upon between Mappls & it's API consumer. </i><li> For any further clarifications on what all of the response structure is available for your use case, please contact your business relationship manager or contact Mappls API support.</li><li> <strong>PREMIUM APIs/Parameters</strong> are not available for evalulation on signup. To get access, please contact API Support.</li><li><strong>A minimum of one cell tower object is required and a maximum of six cell tower objects are allowed as input.</strong></li><li><strong>To get the best result, a minimum of three cell tower objects should be input >  in accordance with one active and two latest historical cell info objects</strong></li></ol>
  termsOfService: 'https://about.mappls.com/api/terms-&-conditions'
  version: 1.0.0
  license:
    name: Mappls License Key Signup
    url: https://about.mappls.com/api/
  contact:
    name: Mappls API Support
    email: apisupport@mappls.com
    url: https://about.mappls.com/api/
security: 
  - staticKeyAuth: []
servers:
  - url: 'https://search.mappls.com'
    description: 'Live Prod server for APIs'
paths:
  /search/places/geo-location:
    post:
      tags: 
        - Geolocation API
      description: >-
        The Geolocation API returns a location on the basis of cell tower information that any mobile client can detect.<br>
        Any mobile user will send the information of all the connected or recently connected cell towers information in the API, Now API will articulate approximate user location on the basis of the provided cell towers information. Mappls will use its cell towers geo-location database to calculate the approximate geo-location of the user.
      summary: >-
         Geolocation API
      operationId: GeolocationAPI
      # parameters:
      #   # - name: Authorization
      #   #   in: header
      #   #   description: >-
      #   #     Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
      #   #   required: true
      #   #   allowEmptyValue: false
      #   #   schema:
      #   #     type: string
      #   #   example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
      requestBody:
          content:
            'application/json':
              schema:
               properties:
                  cellTowers: 
                    description: >-
                      An array of cell tower objects.
                    type: array
                    items: 
                      $ref: '#/components/schemas/celltower'
               required:
                 - cellTowers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
        '204':
          description: Not found
        '400':
          description: Bad request
        '401':
          description: API access denied
        '403':
          description: >-
            Forbidden - Services for this key has been suspended due to daily/hourly transactions limit.
        '412':
          description: >-
            Precondition Failed
        '500':
          description: Something went wrong
        '503':
          description: Internal server error
      deprecated: false
      # servers:
      #   - url: https://atlas.mapmyindia.com
      #     description: 'Live Prod server for APIs'
components:
  schemas:
    celltower:
      title: cellTower object
      description: >-
        A `cellTower` object consisting of information about that cell tower.
      type: object
      required:
        - cellId
        - locationAreaCode
        - mobileCountryCode
        - mobileNetworkCode
      properties:
        cellId:
          type: integer
          description: >-
            Unique identifier of the cell. Required for radioType gsm (default), cdma, wcdma and lte.
          example: 900372
          format: integer
        locationAreaCode:
          type: integer
          description: >-
            The Location Area Code (LAC) for GSM and WCDMA networks.
          example: 57
          format: integer
        mobileCountryCode:
          type: integer
          description: >-
            The cell tower's Mobile Country Code (MCC).<br>Valid range: 0–999.
          example: 405
          format: integer
        mobileNetworkCode: 
            type: string
            example: 872
            description: >-
              The cell tower's Mobile Network Code. This is the MNC for GSM, WCDMA, LTE and NR.<br> Valid range for MNC: 0-999 and for SID: 0-32767
            format: string
    accuracy: 
      title: accuracy of the result.
      type: object
      required: 
        - nearest
      properties: 
        nearest: 
          type: integer
          format: integer
          example: 428
    location:
      title: estimated Location
      type: object
      description: >-
        The estimated geolocation i.e. latitude and longitude, in degrees.
      required:
        - lon
        - lat
      properties:
        lon:
          type: number
          description: 'It shows us the longitude of the estimated location.'
          format: double
          example: 77.268947
        lat:
          type: number
          description: 'It shows us the latitude of the estimated location.'
          format: double
          example: 28.550847
    result:
      title: Estimated Geolocation
      description: 'The estimated geolocation i.e. latitude and longitude, in degrees.'
      type: object
      required:
        - location
        - accuracy
      properties:
        location:
          $ref: '#/components/schemas/location'
        accuracy:
          $ref: '#/components/schemas/accuracy'
  securitySchemes:
    staticKeyAuth: 
      type: apiKey
      in: query
      name: access_token